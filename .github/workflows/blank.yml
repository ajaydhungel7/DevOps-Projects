name: Build, Push Docker Image to ACR, and Deploy to AKS

on:
  push:
    branches:
      - dev  # Adjust the branch as needed

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: self-hosted  # Use your self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: azure login
        run: az login -identity

      - name: Login to Azure Container Registry
        run: |
          TOKEN=$(az acr login --name DevOpsProjectLambton --expose-token --output tsv --query accessToken)
          echo $TOKEN | sudo docker login DevOpsProjectLambton.azurecr.io -u 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Get Git Commit ID
        id: git_commit_id
        run: echo "commit_id=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push image to ACR
        run: |
          IMAGE_NAME=DevOpsProjectLambton.azurecr.io/myapp:${{ env.commit_id }}
          sudo docker build -t $IMAGE_NAME .
          sudo docker push $IMAGE_NAME

      - name: Tag latest
        run: |
          sudo docker login -u github-actions -p JdVMLYOh/Bd1TRE2Lw9O8pac+9Ws8VjuVCra6Mfe3Y+ACRBiS148 devopsprojectlambton.azurecr.io
          sudo docker tag DevOpsProjectLambton.azurecr.io/myapp:${{ env.commit_id }} DevOpsProjectLambton.azurecr.io/myapp:latest
          sudo docker push DevOpsProjectLambton.azurecr.io/myapp:latest

      - name: Create namespace if not exists
        run: |
          kubectl get namespace dev || kubectl create namespace dev

      - name: Deploy to AKS
        run: |
          sed -i 's|{{IMAGE_TAG}}|${{ env.commit_id }}|g' k8s-manifest.yaml
          kubectl apply -f k8s-manifest.yaml
          
      - name: Wait for LoadBalancer to be assigned
        run: |
            SERVICE_NAME=myapp-service
            NAMESPACE=dev
            echo "Waiting for LoadBalancer IP..."
            while [[ $(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}') == "" ]]; do
              sleep 10
            done
  
      - name: Get LoadBalancer URL
        id: get_loadbalancer_url
        run: |
            SERVICE_NAME=myapp-service
            NAMESPACE=dev
            LOAD_BALANCER_IP=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            echo "LoadBalancer URL: http://$LOAD_BALANCER_IP"
            echo "LOAD_BALANCER_URL=http://$LOAD_BALANCER_IP" >> $GITHUB_ENV
  
      - name: Output LoadBalancer URL
        run: echo "The LoadBalancer URL is ${{ env.LOAD_BALANCER_URL }}"    

      